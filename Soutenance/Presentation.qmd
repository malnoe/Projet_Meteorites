---
title: "Étude de la chute des météorites sur Terre"
author: "Yannis Petit, Rassem Djimadoum, Duc-Khoi Nguyen & Garance Malnoë encadré.e.s par Jean-François Coeurjolly"
format: revealjs
fontsize: 20pt
---

# Introduction
## Présentation du projet
:::: {.columns}

::: {.column width="60%"}

_Meteorite Landings_ : 
jeu de données issu de l'Open Data de la **NASA**.
:::

::: {.column width="40%"}
<img src="images/nasa_logo.png" alt=" " style="width: 40%; margin-right: 120px; float: right;">
:::

::::

<div style="margin-top: 30px;">
Pas d'objectif défini : **exploration libre** des données pour choisir nos axes d'étude du jeu de données. Mais quelques idées initialement données par Jean-François Coeurjolly :

- Etude de la **dimension temporelle** des données.

- Analyse des **relations entre les variables** du jeu de données.

- Construire un **modèle prédictif** du nombre de météorites tombées dans un pays en fonction de sa superficie et de sa localisation géographique.

- Réaliser une **étude spatiale** pour déterminer si certaines régions sont plus touchées.

- **Visualiser** les chutes de météorites sur un planisphère.
</div>

## Organisation, outils et bibliothèques


# Exploration des données
## Présentation des variables

## Name

```{r}
#| echo: false
#| fig-height: 5
#| fig-width: 7
library(corrr)
library(xtable)
library(ggplot2)
library(dplyr)

Meteorite_Landings <- read.csv("C:/Users/garan/Documents/Ecole/M1/Projet/Projet_Meteorites/Données/Meteorite_Landings.csv")

# Name - Première lettre
Meteorite_Landings <- Meteorite_Landings %>%
  mutate(first_letter = substr(name, 1, 1))
# Compter le nombre d'occurrences de chaque première lettre et trier par ordre décroissant
letter_counts <- Meteorite_Landings %>%
  group_by(first_letter) %>%
  summarise(count = n()) %>%
  arrange(desc(count))  # Trier par ordre décroissant
# Créer l'histogramme
ggplot(letter_counts, aes(x = reorder(first_letter, -count), y = count)) +
  geom_bar(stat = "identity") +
  labs(title = "Histogramme des premières lettres des noms de météorites",
       x = "Première lettre",
       y = "Nombre de météorites") +
  theme_minimal()
```

## Nametype

## Recclass
```{r}
#| echo: false
#| fig-height: 5
#| fig-width: 7
#Recclass
# Calcul pourcentage en ne gardant que ceux > 4%
recclass_counts <- Meteorite_Landings %>%
  group_by(recclass) %>%
  summarise(count = n()) %>%
  mutate(percentage = count / sum(count) * 100)
# Regrouper les classes qui représentent moins de 4 % dans "Autres"
recclass_counts <- recclass_counts %>%
  mutate(recclass = ifelse(percentage < 4, "Autres", recclass)) %>%
  group_by(recclass) %>%
  summarise(count = sum(count), percentage = sum(percentage))
# Trier par pourcentage
recclass_counts <- recclass_counts %>%
  arrange(percentage)
# Pie chart
ggplot(recclass_counts, aes(x = "", y = percentage, fill = recclass)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar("y") +
  labs(title = "Répartition des classes de recclass",
       fill = "Classe") +
  theme_void() +  # Utiliser un thème vide pour un pie chart
  geom_text(aes(label = paste0(round(percentage, 1), "%")), 
            position = position_stack(vjust = 0.5),
            size=3,
            color="white")
```


## Mass


## Fall


## Year
```{r}
#| echo: false
#| fig-height: 5
#| fig-width: 7

# Year
# Filtrer les données pour ne garder que les années > 1963 et < 2026
filtered_data <- Meteorite_Landings %>%
  filter(year > 1963 & year <2026)
# Compter le nombre d'occurrences de chaque année
year_counts <- filtered_data %>%
  group_by(year) %>%
  summarise(count = n())
# Créer le barplot
ggplot(year_counts, aes(x = year, y = count)) +
  geom_bar(stat = "identity") +
  labs(title = "Nombre de météorites tombées chaque année (après 1963)",
       x = "Année",
       y = "Nombre de météorites") +
  theme_minimal()
```

## Location

## Latitude
```{r}
#| echo: false
#| fig-height: 5
#| fig-width: 7

# Latitude
# Arrondir les valeurs de reclat au degré le plus proche et compter les occurrences
latitude_counts <- Meteorite_Landings %>%
  mutate(rounded_lat = round(reclat)) %>%  # Arrondir au degré le plus proche
  group_by(rounded_lat) %>%
  summarise(count = n())
# Barplot
ggplot(latitude_counts, aes(x = rounded_lat, y = count)) +
  geom_bar(stat = "identity") +
  labs(title = "Météorites tombées par degré de latitude",
       x = "Latitude (degré arrondi à l'unité)",
       y = "Nombre de météorites") +
  theme_minimal()
```

## Longitude

```{r}
#| echo: false
#| fig-height: 5
#| fig-width: 7

# Longitude
# Arrondir les valeurs de reclat au degré le plus proche et compter les occurrences
longitude_counts <- Meteorite_Landings %>%
  filter(reclong >= -180 & reclong <= 180)
longitude_counts <- longitude_counts %>%
  mutate(rounded_long = round(reclong)) %>%  # Arrondir au degré le plus proche
  group_by(rounded_long) %>%
  summarise(count = n())
# Barplot
ggplot(longitude_counts, aes(x = rounded_long, y = count)) +
  geom_bar(stat = "identity") +
  labs(title = "Météorites tombées par degré de longitude",
       x = "Longitude (degré arrondi à l'unité)",
       y = "Nombre de météorites") +
  theme_minimal()
```

## Location
```{r}
#| echo: false
#| fig-height: 5
#| fig-width: 7

library(rnaturalearth)
library(sf)

# Charger les contours des pays (projection WGS84 par défaut)
world <- ne_countries(scale = "medium", returnclass = "sf")

# Charger les données de météorites (exemple : colonnes reclat, reclong)
df <- read.csv("C:/Users/garan/Documents/Ecole/M1/Projet/Projet_Meteorites/Données/Meteorite_Landings.csv", stringsAsFactors = FALSE) |>
  na.omit() |>  # Supprimer les NA
  dplyr::select(reclat, reclong)  # Sélectionner les colonnes pertinentes

ggplot() +
  geom_sf(data = world, fill = "lightgray", color = "black", linewidth = 0.1) +
  geom_point(data = df, aes(x = reclong, y = reclat), 
             color = "red", alpha = 0.3, size = 0.5) +
  labs(title = "Emplacement des données") +
  theme_minimal()
```

## Répartition selon les pays

<img src="images/exploration/map_points_countries_avec_echelle.png" alt="Par pays (échelle logarithmique)" style="width: 50%; float: left;">

<img src="images/exploration/map_points_km2_avec_echelle.png" alt="Selon la superficie (échelle logarithmique)" style="width: 50%; float: right;">

## Multivarié

## Discussion des limites du jeu de données et choix des pistes à poursuivre


# Modélisation de processus ponctuels
## Objectifs

## Théorie homogène

## Simulations

## Théorie inhomogène

## Simulations

# Visualisation en 3D
## Pourquoi une visualisation en 3D ?

## Python

## R

<iframe src="http://127.0.0.1:6827" width="110%" height="600px"></iframe>

# Impact environnemental
## Impact environnemental personnel

## Impact global du projet

## Politique de la structure d'acceuil

# Conclusion