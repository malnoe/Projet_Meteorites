---
title: "√âtude de la chute des m√©t√©orites sur Terre"
author: "Yannis Petit, Rassem Djimadoum, Duc-Khoi Nguyen & Garance Malno√´ encadr√©.e.s par Jean-Fran√ßois Coeurjolly"
format: 
  revealjs :
    toc: true
    slide-number: true
    toc-depth: 1
    number-section: true

fontsize: 18pt
---

# Introduction
## Pr√©sentation du projet
:::: {.columns}

::: {.column width="60%"}

_Meteorite Landings_ : 
jeu de donn√©es issu de l'Open Data de la **NASA**.
:::

::: {.column width="40%"}
<img src="images/nasa_logo.png" alt=" " style="width: 40%; margin-right: 120px; float: right;">
:::

::::

<div style="margin-top: 30px;">
Pas d'objectif d√©fini : **exploration libre** des donn√©es pour choisir nos axes d'√©tude du jeu de donn√©es. Mais quelques id√©es initialement donn√©es par Jean-Fran√ßois Coeurjolly :

- Etude de la **dimension temporelle** des donn√©es.

- Analyse des **relations entre les variables** du jeu de donn√©es.

- Construire un **mod√®le pr√©dictif** du nombre de m√©t√©orites tomb√©es dans un pays en fonction de sa superficie et de sa localisation g√©ographique.

- R√©aliser une **√©tude spatiale** pour d√©terminer si certaines r√©gions sont plus touch√©es.

- **Visualiser** les chutes de m√©t√©orites sur un planisph√®re.
</div>

# Exploration des donn√©es
## Pr√©sentation des variables

Le jeu de donn√©es comporte 45716 observations pour 10 variables.
Pour l'√©tude, nous nous sommes concentr√©s sur ces 4 variables :

- $\underline{\textbf{mass..g.}}$ : Elle corresponds √† la masse de la m√©t√©orite en gramme.

- $\underline{\textbf{year}}$ : Ann√©e o√π la m√©t√©orite est tomb√©e sur Terre.

- $\underline{\textbf{reclat}}$ : Lattitude de l√† o√π est tomb√©e la m√©t√©orite.

- $\underline{\textbf{reclong}}$ : Longitude de l√† o√π est tomb√©e la m√©t√©orite.


Autres variables : $\textbf{id}, \textbf{name}, \textbf{nametype}, \textbf{recclass}, \textbf{fall}, \textbf{GeoLocation}$.

<div style="margin-top: 100px;">
On a par la suite cr√©√© la variable $\underline{\textbf{pays}}$ qui indique le pays dans lequel la m√©t√©orite est tomb√©e. Cela servira √† filtrer les donn√©es par pays.
</div>

## Masse de la m√©t√©orite (variable mass)

131 donn√©es manquantes soit 0,3% du jeu de donn√©es. 

**Tr√®s grande h√©t√©orog√©n√©it√©** des valeurs :

<figure>
    <img src="images/exploration/boitemoustache_mass.png" alt="" style="width: 90%; float: center; margin-left:70px">
</figure>

<div style="margin-top: 30px;">

- Majorit√© de petites m√©t√©orites.

- Quelques m√©t√©orites tr√®s volumineuses.

- Biais de recensement en faveur des m√©t√©orites les plus grosses.
</div>


## Ann√©e de la chute de la m√©t√©orite (variable year)

291 donn√©es manquantes et une donn√©e aberrante. **Tr√®s grande h√©t√©rog√©n√©it√©** des valeurs :

::: {.column width="50%" }

<figure>
    <img src="images/exploration/boitemoustache_year.png" alt="" style="width: 100%; margin-left:1px; float: left;">
</figure>

::: 

::: {.column width="50%"}
- Large majorit√© des donn√©es date des **50 derni√®res ann√©es**.
- Derni√®re valeur en 2013 : jeu de donn√©es **non mis √† jour**.

:::

::: {.column width="50%" style="margin-top: 10px;"}

```{r}
#| echo: false
#| fig-align: left
#| fig-height: 3.8
#| fig-width: 6.2

library(corrr)
library(xtable)
library(ggplot2)
library(dplyr)

Meteorite_Landings <- read.csv("../Donn√©es/Meteorite_Landings.csv")

# Year
# Filtrer les donn√©es pour ne garder que les ann√©es > 1963 et < 2026
filtered_data <- Meteorite_Landings %>%
  filter(year > 1963 & year <2026)
# Compter le nombre d'occurrences de chaque ann√©e
year_counts <- filtered_data %>%
  group_by(year) %>%
  summarise(count = n())
# Cr√©er le barplot
ggplot(year_counts, aes(x = year, y = count)) +
  geom_bar(stat = "identity") +
  labs(title = "Nombre de m√©t√©orites tomb√©es chaque ann√©e (apr√®s 1963)",
       x = "Ann√©e",
       y = "Nombre de m√©t√©orites") +
  theme_minimal()
```

:::
::: {.column width="50%" style="margin-top: 10px;"}
- **Augmentation des recensements √† partir de 1974** :
  - R√©seaux de surveillance.
  - Centralisation des donn√©es.
  - Mise en place de missions de recherche sur la chute des m√©t√©orites.

:::


## Emplacement de la chute de la m√©t√©orite (variables reclat, relong et geolocation)
7315 donn√©es manquantes o√π la latitude, la longitude et la variable geolocation sont absentes en m√™mes temps, environ 16% du jeu de donn√©es. 

Visualisation sur le planisph√®re :

::: {.column width="50%"}

```{r}
#| echo: false
#| fig-height: 5
#| fig-width: 7

library(rnaturalearth)
library(sf)

# Charger les contours des pays (projection WGS84 par d√©faut)
world <- ne_countries(scale = "medium", returnclass = "sf")

# Charger les donn√©es de m√©t√©orites (exemple : colonnes reclat, reclong)
df <- read.csv("../Donn√©es/Meteorite_Landings.csv", stringsAsFactors = FALSE) |>
  na.omit() |>  # Supprimer les NA
  dplyr::select(reclat, reclong)  # S√©lectionner les colonnes pertinentes

ggplot() +
  geom_sf(data = world, fill = "lightgray", color = "black", linewidth = 0.1) +
  geom_point(data = df, aes(x = reclong, y = reclat), 
             color = "red", alpha = 0.3, size = 0.5) +
  labs(title = "Emplacement des donn√©es") +
  theme_minimal()
```

:::

::: {.column width="50%"}
<div style="margin-top: 10px;">

- Seulement les terres √©mmerg√©es.
- Quelques r√©gions concentrent beaucoup de points : Etats-Unis, Europe de l'Ouest, Nord-Ouest de l'Affrique, Sud de l'Australie, Antarctique.
- Quelques r√©gions avec tr√®s peu de m√©t√©orites recens√©es : Nord du Canada, for√™t amazonienne, Nord de la Russie.

</div>

:::
$\rightarrow$ **Biais g√©ographique** en faveur des r√©gions les plus dens√©ment peupl√©es. Exectption de l'Antarctique expliqu√©e par les exp√©ditions r√©alis√©es pour la recherche sur les ch√ªtes de m√©t√©orites.


## Latitude et longitude

::: {.columns}
::: {.column width="50%" align="left"}
```{r}
#| echo: false
#| fig-height: 3
#| fig-width: 5
#| fig-align: center

# Longitude
# Arrondir les valeurs de reclat au degr√© le plus proche et compter les occurrences
longitude_counts <- Meteorite_Landings %>%
  filter(reclong >= -180 & reclong <= 180)
longitude_counts <- longitude_counts %>%
  mutate(rounded_long = round(reclong)) %>%  # Arrondir au degr√© le plus proche
  group_by(rounded_long) %>%
  summarise(count = n())
# Barplot
ggplot(longitude_counts, aes(x = rounded_long, y = count)) +
  geom_bar(stat = "identity") +
  labs(title = "M√©t√©orites tomb√©es par degr√© de longitude",
       x = "Longitude (degr√© arrondi √† l'unit√©)",
       y = "Nombre de m√©t√©orites") +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 10),  # R√©duire la hauteur du titre
    axis.title = element_text(size = 8)    # R√©duire la hauteur des axes
  )
```
:::

::: {.column width="50%" align="right"}
```{r}
#| echo: false
#| fig-height: 3
#| fig-width: 5
#| fig-align: center

# Latitude
# Arrondir les valeurs de reclat au degr√© le plus proche et compter les occurrences
latitude_counts <- Meteorite_Landings %>%
  mutate(rounded_lat = round(reclat)) %>%  # Arrondir au degr√© le plus proche
  group_by(rounded_lat) %>%
  summarise(count = n())
# Barplot
ggplot(latitude_counts, aes(x = rounded_lat, y = count)) +
  geom_bar(stat = "identity") +
  labs(title = "M√©t√©orites tomb√©es par degr√© de latitude",
       x = "Latitude (degr√© arrondi √† l'unit√©)",
       y = "Nombre de m√©t√©orites") +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 10),  # R√©duire la hauteur du titre
    axis.title = element_text(size = 8)    # R√©duire la hauteur des axes
  )
```

:::
:::

**Pic en 0** : Donn√©es faussement renseign√©es en (0,0) en cas d'absence des coordonn√©es exactes (plusieurs milliers de donn√©es).


## Discussion des limites du jeu de donn√©es

- **Peu de donn√©es manquantes** mais sur des **variables importantes** (masse, ann√©e et localisation). Finalement, 38 115 observations (83% des donn√©es), a priori suffisant pour nos analyses.

- Mise en √©vidence de biais : 
  - **Biais temporel** : surepr√©sentation des m√©t√©orites les plus r√©centes, seulement 40 ann√©es exploitables.
  - **Biais g√©ographique** : plus de recensements dans les zones dens√©ment peupl√©es et donn√©es faussement r√©f√©renc√©es en (0,0).
  - **Biais en faveur des plus grosses m√©t√©orites** : plus faciles √† identifier que les petites m√©t√©orites qui sont ais√©ment confondues avec des roches terrestres.

**Le jeu de donn√©es est en r√©alit√© tr√®s incomplet**. Et nous manquons d'information pour √©viter ces biais pour faire nos analyses.

## Choix des pistes √† poursuivre

$\underline{\textbf{Pistes initialement envisag√©es mises de c√¥t√©}}$ :

- **L'analyse temporelle** : pas assez de pr√©cision temporelle et seulement 40 ann√©es exploitables. Nous avons √©tudi√© un autre jeu de donn√©es (Natural History Museum) plus pr√©cis mais √©galement trop incomplet.

- **La mod√©lisation pr√©dictive** du nombre de m√©t√©orites tomb√©es par pays : le biais g√©ographique rend l'analyse peu pertinente.

$\underline{\textbf{Pistes choisies pour le reste de l'√©tude}}$ :

- **Mod√©lisation du processus de la chute des m√©t√©orites** : processus de Poisson homog√®nes et inhomog√®nes.

- **Visualisation en 3D** pour se d√©tacher des distortions caus√©es par la projection sur un planisph√®re.

# Mod√©lisation de processus ponctuels
## Qu'est-ce qu'un processus ponctuel ?


**D√©finition**  
Un *processus ponctuel* est une mesure al√©atoire discr√®te Œ¶ sur un espace m√©trique ùïä , caract√©ris√©e par une distribution de probabilit√© gouvernant la configuration des points {x‚ÇÅ, x‚ÇÇ, ...} ‚äÇ ùïä.

 <div style="margin-top: 50px;">
**Types de processus de Poisson** :

1. **Processus de Poisson homog√®ne**  
   *Caract√©ristique* : Intensit√© constante $\lambda (x,y) = \lambda_0$ sur tout l'espace.

2. **Processus de Poisson inhomog√®ne**  
   *Caract√©ristique* : Intensit√© variable d√©pendant de la position suivant une fonction $\lambda(x,y)$.
</div>




## Processus de Poisson homog√®ne

**Propri√©t√©s cl√©s** :

::: {.column width="50%" align="left"}
- Intensit√© constante : $\lambda (x,y) = \lambda_0$  
  - R√©partition uniforme dans l'espace
:::

::: {.column width="50%" align="right"}
- Points ind√©pendants entre eux  
- Nombre de points dans une zone $A$ suit une loi de Poisson : 
  $n(A)\sim Poisson(\lambda_0 \times |A|)$ 
:::

**Simulation** :

![](images/poisson_homogene.png){style="display: block; margin: auto; width: 100%;"}

## Processus de Poisson inhomog√®ne

**Propri√©t√©s cl√©s** :

::: {.column width="50%" align="left"}
- Intensit√© variable : fonction $\lambda(x,y)$ 
  - Densit√© non-uniforme dans l'espace.
:::

::: {.column width="50%" align="right"}
- Points ind√©pendants entre eux.
- Nombre de points dans une zone $A$ suit une loi de Poisson : 
  $n(A)\sim Poisson(\int\int_A \lambda(x,y) dxdy \times |A|)$ 
:::

**Simulation** :

![](images/poisson_inhom.png){style="display: block; margin: auto; width: 100%;"}

## Focus sur l'Oman

![](images/poisson_oman.png){style="display: block; margin: auto; width: 100%;"}


# Visualisation en 3D

## Pourquoi une visualisation en 3D ?
- Les cartes 2D classiques introduisent des **distorsions** :
  - **D√©formation des surfaces**, surtout aux p√¥les.
  - Distances mal repr√©sent√©es.
  - Difficult√© √† percevoir la r√©partition r√©elle.

- Une visualisation en **3D sur un globe** permet :
  - Une **repr√©sentation plus fid√®le** des localisations.
  - Une **meilleure lisibilit√©** des zones d‚Äôimpact.
  - Une exploration dynamique dans le temps.

- Animation temporelle :
  - Visualisation de l‚Äô**√©volution historique** des chutes.
  - Mise en √©vidence des **zones les plus touch√©es**.
  - Identification des p√©riodes d‚Äôintensification (ex : apr√®s 1970).

> La visualisation 3D est un **compl√©ment pr√©cieux** aux analyses statistiques classiques.

## Visualisation 3D avec Python

::: {.column width="50%" align="left"}
- **Librairies** :  
  [Plotly](https://plotly.com/python/),  [GeoPandas](https://geopandas.org/),  
  [Shapely](https://shapely.readthedocs.io/),  [NumPy](https://numpy.org/),  [Pandas](https://pandas.pydata.org/)


- **Traitement des donn√©es** :  
  - Nettoyage, filtrage, √©chelle logarithmique pour la masse.
  - Jointure spatiale avec shapefile externe.

:::

::: {.column width="50%" align="right"}
<div style="flex: 1; text-align: right;">
  <video width="100%" controls autoplay loop muted>
    <source src="3Dviz.mp4" type="video/mp4">
    Votre navigateur ne supporte pas les vid√©os HTML5.
  </video>
</div>

:::
<div style="margin-top:40px">
</div>
::: {.column width="50%" align="left"}
- **Globe 3D** :  
  - Projection orthographique.
  - Visualisation des co-variables (taille \rightarrow masse, couleur \rightarrow ann√©e).
  - Annotations dynamiques : nombre total de points et top 10 des pays.

:::

::: {.column width="50%" align="right"}
- **Interactivit√©** :  
  - Slider temporel.
  - Boutons Play / Pause.
  - Info-bulles (nom, masse, ann√©e).

:::







## Repr√©sentation 3D avec **threejs**

Sur R, la visualision a √©t√© faite avec le package **threejs**, bas√© sur la biblioth√®que JavaScript **Three.js**.  
La fonction **globejs()** permet de repr√©senter des donn√©es spatiales sur un globe interactif via les arguments :  

- **img** : image du globe (obtenue sur le site de la NASA).

- **lat / long** : coordonn√©es g√©ographiques.

- **color / value** : couleur et hauteur des points.


Cette approche permet une manipulation intuitive des donn√©es, mais reste limit√©e en R pour l‚Äôinteractivit√©.

<div style="margin-top: 100px;">
$\rightarrow$ Nous avons donc choisi d'utiliser **Shiny** pour d√©velopper un dashboard interactif, plus flexible et r√©actif.
</div>

## Cr√©ation d'un dashboard

Le dashboard d√©velopp√© permet d‚Äôexplorer les donn√©es √† l‚Äôaide de trois filtres :  

- **Ann√©e de la chute** : par d√©cennies (1900‚Äì2013) pour simplifier l‚Äôinterface.

- **Masse des m√©t√©orites** : de 1g √† 100 tonnes par puissance de 10.

- **Pays de la chute** : ajout d‚Äôune colonne **pays** via le package **rnaturalearth**.

Fonctionnalit√©s suppl√©mentaires :

- Affichage du **nombre de m√©t√©orites** selon les filtres appliqu√©s.  

- **Coloration des points** selon la masse pour enrichir la lecture.

<div style="margin-top: 100px;">
$\rightarrow$ L'application reste limit√©e par le temps de chargement d√ª √† **globejs()**, qui est relanc√© √† chaque filtre.
</div>

## Dashboard shiny

<iframe src="http://127.0.0.1:5133" width="100%" height="1000px" ></iframe>


## Conclusion
$\underline{\textbf{Impact environnemental}}$ :

- Projet sobre : autant de $CO_2$ que 9km en voiture thermique.
- Pas d'algorithmes de Machine Learning ou de longs calculs.

$\underline{\textbf{Impact social}}$ :

- Impact assez limit√© mais potentielle utilisation des visualisation 3D pour la m√©diation scientifique et la d√©couverte de la m√©t√©oritique.

$\underline{\textbf{Ce que l'on retient}}$ :

- D√©couverte de la statistique spatiale, des processus ponctuels et du package spatstat.
- Voir les limites et avantage de la visualisation 3D en R et Python.

$\underline{\textbf{Ouvertures possibles}}$ :

- Prolonger l'analyse des processus ponctuels.
- Trouver ou former nous-m√™me un jeu de donn√©es plus propre et plus pr√©cis pour explorer les pistes initialement envisag√©es mais mises de c√¥t√©.
